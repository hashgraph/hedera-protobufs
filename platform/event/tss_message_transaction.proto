/**
 * # Tss Message Transaction
 *
 * ### Keywords
 * The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
 * "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
 * document are to be interpreted as described in [RFC2119](https://www.ietf.org/rfc/rfc2119).
 */
syntax = "proto3";

package com.hedera.hapi.platform.event;

/*
 * Hedera Network Services Protobuf
 *
 * Copyright (C) 2018 - 2024 Hedera Hashgraph, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

option java_package = "com.hedera.hapi.platform.event.legacy";
// <<<pbj.java_package = "com.hedera.hapi.platform.event">>> This comment is special code for setting PBJ Compiler java package
option java_multiple_files = true;

/**
 * The TssMessageTransaction is used to send a TssMessage to the network for a candidate roster.
 */
message TssMessageTransaction {

  /**
   * A hash of the roster containing the node generating the TssMessage.
   */
  bytes source_roster_hash = 1;

  /**
   * A hash of the roster that the TssMessage is for.
   */
  bytes target_roster_hash = 2;

  /**
   * An index to order shares.
   * This establishes a global ordering of shares across all shares in
   * the network.  It corresponds to the index of the public share in the
   * list returned from the TSS library when the share was created for
   * the source roster.
   */
  uint64 share_index = 3;

  /**
   * A byte array containing the the TssMessage generated by the node
   * for the share_index.
   */
  bytes tss_message = 4;
}
