syntax = "proto3";

package proto;

/*-
 * ‌
 * Hedera Network Services Protobuf
 * ​
 * Copyright (C) 2023 Hedera Hashgraph, LLC
 * ​
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ‍
 */

option java_package = "com.hederahashgraph.api.proto.java";
// <<<pbj.java_package = "com.hedera.hapi.node.consensus">>> This comment is special code for setting PBJ Compiler java package
option java_multiple_files = true;

import "google/protobuf/wrappers.proto";
import "basic_types.proto";
import "duration.proto";
import "timestamp.proto";

/**
 * See [NodeService.updateNode()](#proto.NodeService)
 * Modify the attribute of a node. If a field is not set in the transaction body, the
 * corresponding node attribute will be unchanged.
 * or phase 2, this marks node to be updated in the merkle tree and will be used to write config.txt and public.pfx during prepare freeze
 * the node will not be updated until the network is upgraded.
 */
message NodeUpdateTransactionBody {
    /**
     * The unique id of the Node to be updated. This must refer to an existing, non-deleted node.
     */
    int64 node_id = 1;

    /**
     * If set, the new account_id to be associated with the node, can not be empty
     * add doc later about the signing requirement
     */
    AccountID account_id = 2;

    /**
     * If set, the new description to be associated with the node
     */
    google.protobuf.StringValue description = 3;

    /**
     * inbound ip address or FQDN and port, can not be empty
     */
    ServiceEndpoint inbound_gossip_endpoint = 4;

    /**
     * outbound ip address or FQDN and port, can not be empty
     */
    ServiceEndpoint outbound_gossip_endpoint = 5;

    /**
     * # A node's service IP addresses and ports
     */
    repeated ServiceEndpoint service_endpoint = 6;

    /**
     *If set, the new public_key to be associated with the node, can not be empty
     */
    google.protobuf.StringValue public_key = 7;

    /**
     * If set, the new node x509 certificate hash to be associated with the node
     */
    google.protobuf.BytesValue certificate_hash = 8;
}
